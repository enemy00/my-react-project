{"version":3,"file":"static/js/378.310894db.chunk.js","mappings":"kMAeA,MAmCA,EAnCqEA,KAEjEC,EAAAA,EAAAA,YAAU,KACND,EAAME,UAAU,GACjB,IAEEF,EAAMG,OAKPC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAEC,cAAcJ,SAAC,mBAChCF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAAA,EAAEE,QAAQL,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAAA,EAAEG,aAAaN,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EAAMC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wCAAuC,OAC/CN,EAAMG,MAAMU,KAAIC,IACNP,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAEM,MAAMT,UAC3BC,EAAAA,EAAAA,KAACS,EAAAA,GAAO,CAACC,GAAE,kBAAAC,OAAoBJ,EAAEK,IAAKb,UAC1CC,EAAAA,EAAAA,KAAA,QAAAD,SACIQ,EAAEM,iBAMdb,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAEY,SAASf,UACvBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAEa,aAAahB,SAAC,kDApBrCC,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,K,4CCR5B,SAAeC,EAAAA,EAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KARmBC,IAAmB,CACtCC,YAAaD,EAAMC,YACnBzB,MAAOwB,EAAME,UAAU1B,MACvB2B,KAAMH,EAAME,UAAUC,QAKG,CAAC5B,SAAQ,KAAE6B,QAAO,OAF/C,CAEmDC,E","sources":["Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport {InitialType} from \"../../redux/dialogsReducer\";\nimport {UserType} from \"../../redux/resourcesReducer\";\nimport {NavLink} from \"react-router-dom\";\nimport LoadingBlock from \"../Preloader/Preloader\";\nimport {useEffect} from \"react\";\n\ntype MapStatePropsType = {\n    dialogsPage: InitialType\n    users: Array<UserType>\n}\ntype MapDispatchPropsType = {\n    getUsers: () => void\n}\nconst Dialogs: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\n\n    useEffect(() => {\n        props.getUsers()\n    }, []);\n\n    if (!props.users) {\n        return <LoadingBlock/>\n    }\n\n    return (\n        <>\n            <h2 className={s.headContainer}>PhAPI dialogs</h2>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    <span><b>Choose the person to start a dialog</b>:</span>\n                    {props.users.map(u => {\n                        return <div className={s.items}>\n                            <NavLink to={`/dialogs/convo/${u.id}`}>\n                        <span>\n                           {u.name}\n                        </span>\n                            </NavLink>\n                        </div>\n                    })}\n                </div>\n                <div className={s.messages}>\n                    <div className={s.textPosition}>\n                        Choose the chat to continue texting.\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {getUser, getUsers} from \"../../redux/resourcesReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport * as React from \"react\";\nimport {withAuthRedirect} from \"../../hocs/withAuthRedirect\";\n\nlet mapStateToProps = (state: AppStateType) => ({\n    dialogsPage: state.dialogsPage,\n    users: state.resources.users,\n    user: state.resources.user,\n});\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {getUsers, getUser}))(Dialogs);\n"],"names":["props","useEffect","getUsers","users","_jsxs","_Fragment","children","_jsx","className","s","headContainer","dialogs","dialogsItems","map","u","items","NavLink","to","concat","id","name","messages","textPosition","LoadingBlock","compose","withAuthRedirect","connect","state","dialogsPage","resources","user","getUser","Dialogs"],"sourceRoot":""}